<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="Velocity" Id="{be16ee95-2daf-451b-8eeb-e164a9c5a781}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Velocity
VAR
	Axis2_Power: MC_Power;
	Axis2: AXIS_REF;
	Power2_EnablePos: BOOL;
	Power2_EnableNeg: BOOL;
	Power2_Enable: BOOL;
	Power2_Override: LREAL;
	Power2_BufferMode: MC_BufferMode;
	Power2_Status: BOOL;
	Power2_Busy: BOOL;
	Power2_Active: BOOL;
	Power2_Error: BOOL;
	Power2_ErrorID: UDINT;
	Axis2_ErrorReset: MC_Reset;
	ErrorReset2_Execute: BOOL;
	res2Done: BOOL;
	res2Busy: BOOL;
	res2Error: BOOL;
	res2ErrorID: UDINT;
	Axis2_MoveVelocity: MC_MoveVelocity;
	MV2_Execute: BOOL;
	MV2_Velocity: LREAL;
	MV2_Accelleration: LREAL;
	MV2_Decceleration: LREAL;
	MV2_Jerk: LREAL;
	MV2_Direction: MC_Direction;
	MV2_Buffermode: MC_BufferMode;
	MV2_InVelocity: BOOL;
	MV2_Busy: BOOL;
	MV2_Active: BOOL;
	MV2_CommandAborted: BOOL;
	MV2_Error: BOOL;
	MV2_ErrorID: UDINT;
	StepV: INT;
	PowerOnVelocityBtn: BOOL;
	Start2Btn: BOOL;
	Stop2Btn: BOOL;
	MVelocity: INT;
	Read_Velocity: MC_ReadActualVelocity;
	RV_Enable: BOOL;
	RV_Valid: BOOL;
	RV_Busy: BOOL;
	RV_Error: BOOL;
	RV_ErrorID: UDINT;
	RActualVelocity: LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Axis2 - Velocity controlled servomotor
//Velocity Controlled Servo
		
		//In case of an error with torque controlled servo:
	IF(Power2_error = TRUE OR MV2_Error=TRUE) THEN
		//StepV := 10;
	END_IF
		
		CASE StepV OF
		0://Start of the power (in next step), when the PowerOnVelocity button will be clicked
			IF (PowerOnVelocityBtn = TRUE) THEN
				StepV := 1;
			END_IF
		1://Start the torque control, when the StartTorque button will be clicked
			Power2_Enable := TRUE;
			Power2_EnablePos := TRUE;
			Power2_EnableNeg := TRUE;
			Power2_Override := 100;
			PowerOnVelocityBtn := FALSE;
			IF (Start2Btn = TRUE) THEN
				StepV := 2;
			END_IF
		2://Stop the motor (in next step), when the StopVelocity button will be clicked
			MV2_Execute := TRUE; 
			
			IF NOT(MV2_Velocity = MVelocity) THEN
				MV2_Velocity := MVelocity;
				MV2_Execute := FALSE; 
			END_IF
			 
			MV2_Accelleration := 100; 
			MV2_Decceleration := 100;
			MV2_Jerk := 100;
			Start2Btn := FALSE;
			IF Stop2Btn = TRUE THEN
				StepV:= 3;
			END_IF
		3://Stops motor and gets back to the Power On state
			IF MV2_Velocity = 0 THEN
				MV2_Execute := TRUE;
				StepV := 1;
			END_IF
			MV2_Execute := FALSE;
			MV2_Velocity := 0;
			Stop2Btn := FALSE;
						
			
		10://Error Step
			Power2_Enable := FALSE;
			MV2_Execute := FALSE; 
			MV2_Velocity := 0;
			ErrorReset2_Execute := TRUE;
			IF res2Done = TRUE THEN
				StepV := 0;
			END_IF
			
		END_CASE

Axis2_Power(
	Axis:= Axis2, 
	Enable:= Power2_Enable, 
	Enable_Positive:= Power2_EnablePos, 
	Enable_Negative:= Power2_EnableNeg, 
	Override:= Power2_Override, 
	BufferMode:= Power2_BufferMode, 
	//Options:= , 
	Status=> Power2_Status, 
	Busy=> Power2_Busy, 
	Active=> Power2_Active, 
	Error=> Power2_Error, 
	ErrorID=> Power2_ErrorID);
	
	Axis2_ErrorReset(
	Axis := Axis2,
	Execute := ErrorReset2_Execute,
	Done => res2Done,
	Busy => res2Busy,
	Error => res2Error,
	ErrorID => res2ErrorID);
	
	Axis2_MoveVelocity(
	Axis:= Axis2, 
	Execute:= MV2_Execute, 
	Velocity:= MV2_Velocity, 
	Acceleration:= MV2_Accelleration, 
	Deceleration:= MV2_Decceleration, 
	Jerk:= MV2_Jerk, 
	Direction:= MV2_Direction, 
	BufferMode:= MV2_Buffermode, 
	//Options:= MV_Options, 
	InVelocity=> MV2_InVelocity, 
	Busy=> MV2_Busy, 
	Active=> MV2_Active, 
	CommandAborted=> MV2_CommandAborted, 
	Error=> MV2_Error, 
	ErrorID=> MV2_ErrorID);
	
	Read_Velocity(
	Axis:= Axis2, 
	Enable:= RV_Enable, 
	Valid=> RV_Valid, 
	Busy=> RV_Busy, 
	Error=> RV_Error, 
	ErrorID=> RV_ErrorID, 
	ActualVelocity=> RActualVelocity);
	]]></ST>
    </Implementation>
    <LineIds Name="Velocity">
      <LineId Id="135" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="80" Count="14" />
      <LineId Id="180" Count="0" />
      <LineId Id="96" Count="36" />
      <LineId Id="77" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="214" Count="19" />
      <LineId Id="52" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="61" Count="14" />
      <LineId Id="60" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="166" Count="6" />
      <LineId Id="165" Count="0" />
      <LineId Id="178" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>